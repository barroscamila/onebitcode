>> Rascunho das aulas...
-------------------------

# Atualizações do JavaScript

-> ES1: especificações iniciais do JS
-> ES3: utilizada por vários anos (ES4 nunca foi lançada)
-> ES5: 2009
-> ES6-2015: vem sendo atualizado anualmente desde então: ES2016, ES2017, ES2018 etc

# Compatibilidade de recursos

-> Os navegadores possuem interpretadores que interpretam o JS
-> Nem sempre os recursos mais novos do JS (advindos das novas atualizações) estão disponíveis nos navegadores. Ou podem demorar para ficarem compatíveis, ou então nunca são implementados

# Template Literals

-> Nova forma de declarar strings (crase)
-> Permite interpolação de strings e quebra de linha automática

# Arrow Functions

-> Nova forma de escrever funções anônimas
-> Não utiliza a palavra function, utiliza '=>' após os parâmetros
-> Não possui seus próprios this, arguments, super, new.target
-> Também permite retornar diretamente uma expressão, caso seja de uma linha única

# Desestruturação de Objetos e Arrays

-> Permite criar variáveis a partir de propriedades de um objeto ou elementos de um Arrays
-> Objetos: as variáveis criadas vão possuir o mesmo nome da propriedade do objeto
-> Arrays: pode-se atribuir qualquer nome para as variáveis criadas

# Operador spread

-> Permite separar os elementos de um objeto iterável, como um array ou uma strings
-> Aplicabilidade: passar vários parâmetros de uma única vez; clonar objetos iteráveis; fazer manipulações sem afetar o objeto original, transformar strings em arrays etc.

# Parêmetros Rest

-> Permite que uma função receba qualquer número de parâmetros
-> Também permite manipular esses parâmetros como um array
-> Os parâmetros Rest devem ser declarados por ultimo na função

# Encadeamento Opcional

-> Permite acessar propriedades internas sem lançar erros, mesmo quando uma propriedade é nullish (null ou undefined)
-> Funciona de forma similar ao encadeamendo normal (operador "."), porém é escrito com "?."

# Operador de Coalescência Nula

-> Operador lógico ("??") que serve para testar se os valores são null e undefined, caso sim, retorna o valor a direita do operador.

